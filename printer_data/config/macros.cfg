[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True





[gcode_macro M950]
gcode:
      SET_PRESSURE_ADVANCE ADVANCE={params.PA|default(0.5)}

      
[gcode_macro screw_calibrate]
gcode:
 G28
 SCREWS_TILT_CALCULATE

#[gcode_macro beep]
#gcode:
#  M300 P100
#  G4 P500
#  M300 P100
#  G4 P500
#  M300 P100

#[gcode_macro M300]
#gcode:  
# {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
# {% set P = params.P|default(100)|int %} ; P sets the tone duration
# {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
# {% if S <= 0 %} ; dont divide through zero
# {% set F = 1 %}
# {% set L = 0 %}
# {% elif S >= 10000 %} ;max frequency set to 10kHz
# {% set F = 0 %}
# {% else %}
# {% set F = 1/S %} ;convert frequency to seconds 
# {% endif %}
#   SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
# G4 P{P} ;tone duration
#   SET_PIN PIN=BEEPER_Pin VALUE=0

[gcode_macro Heat_for_fill_change]
gcode:
  M104 S200

[gcode_macro M601]
gcode:
  PAUSE
  
[gcode_macro HOME_ALL_AXIS]
gcode:
  G28


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
 #   M300 P100

[gcode_macro fill_change]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro BED_MESH_CAL]
gcode:
    G28
    M190 s60
    G28 z
    BED_MESH_CALIBRATE PROFILE="default"
 


[gcode_macro END_PRINT]
gcode:
    ;M108 ; this is a continue statement, if there are any waiting statements it will skip them. Unfortunately it doesn't work in klipper
    # Turn off bed, extruder, and fan
    
    M140 S0
    M104 S0
    M106 S0
    ; Use cancel print for movements etc
    CANCEL_PRINT
    G90
    # Disable steppers
    M84
    SAVE_IF_SET
    #beep
    
[gcode_macro CANCEL_PRINT]
gcode:
      M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)
    G91 ; Set coordinates to relative
    {% if printer.extruder.temperature >= 170 %}
       G1 F1800 E-1 ; Retract filament 3 mm to prevent oozing
    {% endif %}
     ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
    {% if printer.toolhead.homed_axes == "xyz" %}
       G1 F6000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
       G90 ; Set coordinates to absolute
       G1 X0 Y200 F1000 ; Move Heat Bed to the front for easy print removal
 
    {% endif %}
    M84 ; Disable stepper motors
    ;set part fan speed to zero.
    M106 S0
    ;bed and hotend are left at the print temps in case I want to restart.

 

[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
 

 
[gcode_macro M205]
gcode:
    {% if 'X' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ X }
    {% endif %}
# =================================================================
# Save at end macros
# =================================================================
[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
    SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1
 
[gcode_macro SAVE_IF_SET]
gcode:
    {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    {printer.gcode.action_respond_info("Saving was requested - saving and restarting now")}
    SAVE_CONFIG
    {% endif %}
 
# =================================================================
# Filament load and unload macros
# =================================================================
[pause_resume]
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro PARK_FOR_FILL_CHANGE]
gcode:
    G1 X0 Y0 Z100.0 F4000

[gcode_macro PARK]
gcode:
    G1 X125 Y200.0 Z100.0 F4000

[gcode_macro FILAMENT_CHANGE_LOAD]
gcode:
    M83 ; set e to relative positioning
    G92 E0.0
    G1 E60 F200 ; Initially go fast
    G92 E0.0
    
    

[gcode_macro FILAMENT_CHANGE_UNLOAD]
gcode:
    M83 ; set e to relative positioning
    # wiggle filament out of the nozzle
    G1 E0.5 F1000
    G1 E-0.5 F1000
    G1 E1.0 F1000
    G1 E-1.0 F1000
    G1 E1.5 F1000
    G1 E-1.5 F1000
    G1 E2.0 F1000
 
    G1 E-60 F3000 ;fully unload
    G92 E0.0

#[gcode_macro FIL_extrude_5]
#gcode:
   # M83 ; set e to relative positioning
   # G92 E0.0
   # G1 E5 F200 ; then go slow
   # G92 E0.0
 
#[gcode_macro FIL_retract_5]
#gcode:
   # M83 ; set e to relative positioning
   # G92 E0.0
  #  G1 E-50 F200 ; then go slow
  #  G92 E0.0
